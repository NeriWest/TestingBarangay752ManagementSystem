<?php
require '../../../../../libraries/fpdf186/fpdf.php';
require '../../../../../model/admin/adminFamilyModel.php';
require '../../PDFExportDesign.php';
session_start();

// Extend FPDF for consistent header/footer
class PDFWithHeaderFooter extends FPDF {
    private $tableHeaders;
    private $startX;
    private $totalWidth;

    function setTableHeaders($headers, $startX, $totalWidth) {
        $this->tableHeaders = $headers;
        $this->startX = $startX;
        $this->totalWidth = $totalWidth;
    }

    function Header() {
        // Logos
        $this->Image('../../../../../img/Barangay Logo.png', 95, 5, 20);
        $this->Image('../../../../../img/lunsgodNgMayNilaLogo.png', 183, 5, 20);

        // Title and metadata
        $this->SetFont('Arial', 'B', 16);
        $this->Cell(0, 10, 'FAMILY LIST REPORT', 0, 1, 'C');
        $this->SetFont('Arial', '', 10);
        $this->Cell(0, 6, 'Generated on: ' . date('F j, Y'), 0, 1, 'C');
        $this->Cell(0, 6, 'Generated by: ' . htmlspecialchars($_SESSION['last_name']) . ', ' . htmlspecialchars($_SESSION['first_name']), 0, 1, 'C');
        $this->Cell(0, 6, 'Total Family: ' . $GLOBALS['familyCount'], 0, 1, 'C');
        $this->Ln(8);

        // Draw table header
        $this->drawTableHeader();
    }

    function Footer() {
        $this->SetY(-15);
        $this->SetFont('Arial', 'I', 8);
        $this->Cell(0, 10, 'Page ' . $this->PageNo() . '/{nb}', 0, 0, 'C');
        $this->Line(10, $this->GetY() - 2, $this->GetPageWidth() - 10, $this->GetY() - 2);
    }

    function drawTableHeader() {
        $this->SetFont('Arial', 'B', 7);
        $this->SetFillColor(64, 64, 64);
        $this->SetTextColor(255);
        $this->SetX($this->startX);
        $maxHeight = 10;
        $paddingTop = 2;

        foreach ($this->tableHeaders as $header) {
            $x = $this->GetX();
            $y = $this->GetY();

            $this->Rect($x, $y, $header['width'], $maxHeight, 'DF');
            $this->SetXY($x, $y + $paddingTop);
            $this->MultiCell($header['width'], 3, $header['title'], 0, 'C', false);
            $this->SetXY($x + $header['width'], $y);
        }

        $this->Ln($maxHeight);
    }
}

function getAddress($houseNumber, $street) {
    return $houseNumber . " " . $street . " Street, Singalong, Malate, Manila";
}

// Model and pagination
$adminResidentModel = new AdminFamilyModel();
$limit = 20;
$page = isset($_GET['page']) ? (int)$_GET['page'] : 1;
$offset = ($page - 1) * $limit;
$families = $adminResidentModel->showFamiliesWithPagination($conn, $offset, $limit);
$GLOBALS['familyCount'] = count($families);

// Setup PDF
$pdf = new PDFWithHeaderFooter('L', 'mm', 'A4');
$pdf->AliasNbPages();
$pdf->SetAutoPageBreak(true, 25);

// Header config
$headers = [
    ['width' => 15, 'title' => 'Family ID'],
    ['width' => 30, 'title' => 'Family Name'],
    ['width' => 60, 'title' => 'Address'],
    ['width' => 130, 'title' => 'Family Members'],
    ['width' => 20, 'title' => 'Total Income'],
    ['width' => 25, 'title' => 'Created At']
];

$totalWidth = array_sum(array_column($headers, 'width'));
$pageWidth = $pdf->GetPageWidth();
$startX = ($pageWidth - $totalWidth) / 2;

$pdf->setTableHeaders($headers, $startX, $totalWidth);
$pdf->AddPage();

$pdf->SetFont('Arial', '', 6);
$pdf->SetTextColor(0);
$fill = false;

// Content loop
foreach ($families as $family) {
    $residentsFormatted = $family['residents']
        ? preg_replace('/<br\s*\/?>|, /i', ", ", $family['residents'])
        : 'No members';

    if ($pdf->GetY() > 170) {
        $pdf->AddPage();
        $fill = false;
    }

    $pdf->SetX($startX);
    $address = getAddress($family['house_number'], $family['street']);
    $cells = [
        $family['family_id'],
        $family['family_name'],
        $address,
        $residentsFormatted,
        number_format($family['total_income'], 2),
        date('M j, Y', strtotime($family['created_at']))
    ];

    // Max height per row
    $maxHeight = 6;
    foreach ($cells as $i => $content) {
        $numLines = ceil($pdf->GetStringWidth($content) / $headers[$i]['width']);
        $maxHeight = max($maxHeight, $numLines * 4);
    }

    // Draw each cell
    foreach ($headers as $i => $header) {
        $x = $pdf->GetX();
        $y = $pdf->GetY();

        $pdf->SetFillColor($fill ? 240 : 255);
        $pdf->Rect($x, $y, $header['width'], $maxHeight, 'F');

        if ($i == 2) {
            $pdf->MultiCell($header['width'], 4, $cells[$i], 0, 'C', false);
            $pdf->SetXY($x + $header['width'], $y);
        } elseif ($i == 3) {
            $pdf->MultiCell($header['width'], 4, $cells[$i], 0, 'J', false);
            $pdf->SetXY($x + $header['width'], $y);
        } else {
            $pdf->Cell($header['width'], $maxHeight, $cells[$i], 0, 0, 'C', false);
        }

        $pdf->Rect($x, $y, $header['width'], $maxHeight);
    }

    $pdf->Ln($maxHeight);
    $fill = !$fill;
}

ob_clean();
$pdf->Output('Family_List_PDF_Export_('.date('m-d-Y').')pdf', 'I');
?>
