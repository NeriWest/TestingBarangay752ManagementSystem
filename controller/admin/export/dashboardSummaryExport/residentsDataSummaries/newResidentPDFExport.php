<?php
require '../../../../../libraries/fpdf186/fpdf.php';
require '../../../../../model/admin/adminResidentModel.php';
require '../../PDFExportDesign.php';
session_start();

// Extend FPDF class to add repeating headers and footer
class PDFWithHeaderFooter extends FPDF {
    private $tableHeaders;
    private $startX;
    private $totalWidth;
    
    function Header() {
        // Add images
        $this->Image('../../../../../img/Barangay Logo.png', 85, 5, 20);
        $this->Image('../../../../../img/lunsgodNgMayNilaLogo.png', 193, 5, 20);

        // Report header
        $this->SetFont('Arial', 'B', 16);
        $this->Cell(0, 10, 'NEW RESIDENT LIST REPORT', 0, 1, 'C');
        $this->SetFont('Arial', '', 10);
        $this->Cell(0, 6, 'Generated on: ' . date('F j, Y'), 0, 1, 'C');
        $this->Cell(0, 6, 'Generated by: ' . htmlspecialchars($_SESSION['last_name']). ', '. htmlspecialchars($_SESSION['first_name']), 0, 1, 'C');
        $this->Cell(0, 6, 'Total New Residents: ' . $GLOBALS['residentCount'], 0, 1, 'C');
        $this->Ln(8);
        
        // Draw table header on all pages including first page
        $this->drawTableHeader();
    }
    
    function Footer() {
        // Position at 1.5 cm from bottom
        $this->SetY(-15);
        $this->SetFont('Arial', 'I', 8);
        // Page number
        $this->Cell(0, 10, 'Page ' . $this->PageNo() . '/{nb}', 0, 0, 'C');
        // Add a horizontal line above footer
        $this->Line(10, $this->GetY()-2, $this->GetPageWidth()-10, $this->GetY()-2);
    }
    
    function setTableHeaders($headers, $startX, $totalWidth) {
        $this->tableHeaders = $headers;
        $this->startX = $startX;
        $this->totalWidth = $totalWidth;
    }
    
    function drawTableHeader() {
        $this->SetFont('Arial', 'B', 7);
        $this->SetFillColor(64, 64, 64);
        $this->SetTextColor(255);
        $this->SetX($this->startX);
        $maxHeight = 10;
        $paddingTop = 2;

        foreach ($this->tableHeaders as $header) {
            $x = $this->GetX();
            $y = $this->GetY();

            $this->Rect($x, $y, $header['width'], $maxHeight, 'DF');
            $this->SetXY($x, $y + $paddingTop);
            $this->MultiCell($header['width'], 3, $header['title'], 0, 'C', false);
            $this->SetXY($x + $header['width'], $y);
        }

        $this->Ln($maxHeight);
$this->SetX($this->startX);
    }
}

function getAddress($houseNumber, $street) {
    return $houseNumber . " " . $street . " Street, Singalong, Malate, Manila";
}

// Call the resident model
$adminResidentModel = new AdminResidentModel();
$residents = $adminResidentModel->GETnewResident($conn);
$GLOBALS['residentCount'] = count($residents);

// Create PDF with proper margins
$pdf = new PDFWithHeaderFooter('L', 'mm', 'A4');
$pdf->AliasNbPages(); // Required for {nb} to work in footer
$pdf->SetAutoPageBreak(true, 25); // Increased bottom margin to accommodate footer

// Table headers configuration
$headers = [
    ['width' => 15, 'title' => 'Last Name'],
    ['width' => 20, 'title' => 'First Name'],
    ['width' => 15, 'title' => 'Middle Name'],
    ['width' => 9, 'title' => 'Suffix'],
    ['width' => 10, 'title' => 'Sex'],
    ['width' => 8, 'title' => 'Age'],
    ['width' => 15, 'title' => 'Birthdate'],
    ['width' => 12, 'title' => 'Civil Status'],
    ['width' => 14, 'title' => 'Mobile No.'],
    ['width' => 30, 'title' => 'Email'],
    ['width' => 10, 'title' => 'House No.'],
    ['width' => 10, 'title' => 'Street'],
    ['width' => 35, 'title' => 'Address'],
    ['width' => 16, 'title' => 'Citizenship'],
    ['width' => 12, 'title' => 'Voter Status'],
    ['width' => 10, 'title' => 'Status'],
    ['width' => 20, 'title' => 'Occupation'],
    ['width' => 19, 'title' => 'Disability'],
    ['width' => 15, 'title' => 'Date Registered']
];

$totalWidth = array_sum(array_column($headers, 'width'));
$pageWidth = $pdf->GetPageWidth();
$startX = ($pageWidth - $totalWidth) / 2;

$pdf->setTableHeaders($headers, $startX, $totalWidth);
$pdf->AddPage();

// Table content
$pdf->SetFont('Arial', '', 6);
$pdf->SetTextColor(0);
$fill = false;

foreach ($residents as $resident) {
    // Adjust page break check to account for footer space
    if ($pdf->GetY() > 170) { // Reduced from 180 to make room for footer
        $pdf->AddPage();
        $fill = false;
    }

    $pdf->SetX($startX);
    $address = getAddress($resident['house_number'], $resident['street']);
    $cells = [
        $resident['last_name'],
        $resident['first_name'],
        $resident['middle_name'],
        empty($resident['suffix']) ? 'N/A' : $resident['suffix'],
        $resident['sex'],
        $resident['age'],
        date('m/j/Y', strtotime($resident['date_of_birth'])),
        $resident['civil_status'],
        $resident['cellphone_number'],
        empty($resident['email']) ? 'N/A' : $resident['email'],
        $resident['house_number'],
        $resident['street'],
        $address,
        $resident['citizenship'],
        $resident['voter_status'],
        $resident['status'],
        $resident['occupation'],
        $resident['disability'],
        date('m/j/Y g:i A', strtotime($resident['date_registered']))
    ];
    $columnsToWrap = [1, 9, 12, 16, 17, 18]; 

    $maxHeight = 6;
    foreach ($cells as $i => $content) {
        $numLines = $pdf->GetStringWidth($content) > 0 ? ceil($pdf->GetStringWidth($content) / $headers[$i]['width']) : 1;
        $maxHeight = max($maxHeight, $numLines * 2.5);
    }
    
    foreach ($headers as $i => $header) {
        $x = $pdf->GetX();
        $y = $pdf->GetY();
    
        $pdf->SetFillColor($fill ? 240 : 255); // Set fill color: 240 for light gray, 255 for white
        $pdf->Rect($x, $y, $header['width'], $maxHeight, 'F'); // Draw the cell with the fill color

        if (in_array($i, $columnsToWrap)) {
            // Handle with vertically-centered MultiCell
            $pdf->SetXY($x, $y);
    
            $lineCount = ceil($pdf->GetStringWidth($cells[$i]) / $header['width']);
            $lineHeight = 2.5;
            $cellHeight = $lineCount * $lineHeight;
    
            $yOffset = ($maxHeight - $cellHeight) / 2;
            $pdf->SetXY($x, $y + $yOffset);
    
            $pdf->MultiCell($header['width'], $lineHeight, $cells[$i], 0, 'C', false);
            $pdf->SetXY($x + $header['width'], $y);
        } else {
            // Use single-line Cell for others
            $pdf->Cell($header['width'], $maxHeight, $cells[$i], 0, 0, 'C', false);
        }
    
        $pdf->Rect($x, $y, $header['width'], $maxHeight);
    }
    
    $pdf->Ln($maxHeight);
    $pdf->SetX($startX); // Add this line!
    $fill = !$fill;
}

// Output
$pdf->Output('Total_Resident_PDF_Export_('.date('m-d-Y').').pdf', 'I');
?>